generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int               @id @default(autoincrement())
  firstName      String?
  lastName       String?
  email          String            @unique
  invitationCode Int?              @unique
  password       String?
  files          File[]
  workSpaces     UserOnWorkSpace[]
  updated_at     DateTime?         @default(now()) @db.Timestamp(0)
  created_at     DateTime?         @default(now()) @db.Timestamp(0)
}

model Workspace {
  id        Int               @id @default(autoincrement())
  channels  Channel[]
  name      String
  subDomain String            @unique
  users     UserOnWorkSpace[]
}

model UserOnWorkSpace {
  id          Int        @id @default(autoincrement())
  user        User?      @relation(fields: [userId], references: [id])
  userId      Int?
  workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId Int?
}

model Channel {
  id          Int       @id @default(autoincrement())
  name        String
  workspaces  Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId Int
}

model File {
  id        Int     @id @default(autoincrement())
  user      User?   @relation(fields: [creatorId], references: [id])
  key       String? @unique @default(uuid())
  name      String
  bucket    String
  mimeType  String
  extension String
  creatorId Int?
}
